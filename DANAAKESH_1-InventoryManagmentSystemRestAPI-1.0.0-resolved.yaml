---
openapi: 3.1.0
info:
  title: Inventory Managment System - OpenAPI 3.1
  description: |-
    This is an Inventory Managment System based on the OpenAPI 3.1 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io).
    Some useful links:
    - [Inventory Managment System Repositry](https://github.com/dana-akesh/Inventory_managment_system_api)
  termsOfService: http://swagger.io/terms/
  version: 1.0.0
servers:
- url: http://localhost:8080/api/v1
tags:
- name: product
  description: Everything about the product
- name: category
  description: Access the inventory category
- name: warehouse
  description: Operations about warehouse
- name: shipment
  description: Operations about shipment
paths:
  /product:
    put:
      tags:
      - product
      summary: Update product information from the inventory.
      description: Update product information from the inventory.
      operationId: updateProduct
      requestBody:
        description: Update product information from the inventory
        content:
          application/json:
            schema:
              type: object
              properties:
                productid:
                  type: integer
                  format: int64
                  example: 10
                categoryid:
                  type: string
                  example: eye_makeup
                warehouseid:
                  type: integer
                  format: int64
                  example: 777
                name:
                  type: string
                  example: Elf Mascara
                description:
                  type: string
                  example: null
                price:
                  type: number
                  format: double
                  example: 29.99
                quantity:
                  type: integer
                  format: int32
                  example: 70
              xml:
                name: product
          application/xml:
            schema:
              type: object
              properties:
                productid:
                  type: integer
                  format: int64
                  example: 10
                categoryid:
                  type: string
                  example: eye_makeup
                warehouseid:
                  type: integer
                  format: int64
                  example: 777
                name:
                  type: string
                  example: Elf Mascara
                description:
                  type: string
                  example: null
                price:
                  type: number
                  format: double
                  example: 29.99
                quantity:
                  type: integer
                  format: int32
                  example: 70
              xml:
                name: product
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                productid:
                  type: integer
                  format: int64
                  example: 10
                categoryid:
                  type: string
                  example: eye_makeup
                warehouseid:
                  type: integer
                  format: int64
                  example: 777
                name:
                  type: string
                  example: Elf Mascara
                description:
                  type: string
                  example: null
                price:
                  type: number
                  format: double
                  example: 29.99
                quantity:
                  type: integer
                  format: int32
                  example: 70
              xml:
                name: product
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  productid:
                    type: integer
                    format: int64
                    example: 10
                  categoryid:
                    type: string
                    example: eye_makeup
                  warehouseid:
                    type: integer
                    format: int64
                    example: 777
                  name:
                    type: string
                    example: Elf Mascara
                  description:
                    type: string
                    example: null
                  price:
                    type: number
                    format: double
                    example: 29.99
                  quantity:
                    type: integer
                    format: int32
                    example: 70
                xml:
                  name: product
            application/xml:
              schema:
                type: object
                properties:
                  productid:
                    type: integer
                    format: int64
                    example: 10
                  categoryid:
                    type: string
                    example: eye_makeup
                  warehouseid:
                    type: integer
                    format: int64
                    example: 777
                  name:
                    type: string
                    example: Elf Mascara
                  description:
                    type: string
                    example: null
                  price:
                    type: number
                    format: double
                    example: 29.99
                  quantity:
                    type: integer
                    format: int32
                    example: 70
                xml:
                  name: product
        "400":
          description: Invalid ID supplied
        "404":
          description: Product not found
        "405":
          description: Validation exception
    post:
      tags:
      - product
      summary: Add a new product to the inventory
      description: Add a new product to the inventory
      operationId: addProduct
      requestBody:
        description: Create a new Add a new product and add it to the inventory
        content:
          application/json:
            schema:
              type: object
              properties:
                productid:
                  type: integer
                  format: int64
                  example: 10
                categoryid:
                  type: string
                  example: eye_makeup
                warehouseid:
                  type: integer
                  format: int64
                  example: 777
                name:
                  type: string
                  example: Elf Mascara
                description:
                  type: string
                  example: null
                price:
                  type: number
                  format: double
                  example: 29.99
                quantity:
                  type: integer
                  format: int32
                  example: 70
              xml:
                name: product
          application/xml:
            schema:
              type: object
              properties:
                productid:
                  type: integer
                  format: int64
                  example: 10
                categoryid:
                  type: string
                  example: eye_makeup
                warehouseid:
                  type: integer
                  format: int64
                  example: 777
                name:
                  type: string
                  example: Elf Mascara
                description:
                  type: string
                  example: null
                price:
                  type: number
                  format: double
                  example: 29.99
                quantity:
                  type: integer
                  format: int32
                  example: 70
              xml:
                name: product
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                productid:
                  type: integer
                  format: int64
                  example: 10
                categoryid:
                  type: string
                  example: eye_makeup
                warehouseid:
                  type: integer
                  format: int64
                  example: 777
                name:
                  type: string
                  example: Elf Mascara
                description:
                  type: string
                  example: null
                price:
                  type: number
                  format: double
                  example: 29.99
                quantity:
                  type: integer
                  format: int32
                  example: 70
              xml:
                name: product
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  productid:
                    type: integer
                    format: int64
                    example: 10
                  categoryid:
                    type: string
                    example: eye_makeup
                  warehouseid:
                    type: integer
                    format: int64
                    example: 777
                  name:
                    type: string
                    example: Elf Mascara
                  description:
                    type: string
                    example: null
                  price:
                    type: number
                    format: double
                    example: 29.99
                  quantity:
                    type: integer
                    format: int32
                    example: 70
                xml:
                  name: product
            application/xml:
              schema:
                type: object
                properties:
                  productid:
                    type: integer
                    format: int64
                    example: 10
                  categoryid:
                    type: string
                    example: eye_makeup
                  warehouseid:
                    type: integer
                    format: int64
                    example: 777
                  name:
                    type: string
                    example: Elf Mascara
                  description:
                    type: string
                    example: null
                  price:
                    type: number
                    format: double
                    example: 29.99
                  quantity:
                    type: integer
                    format: int32
                    example: 70
                xml:
                  name: product
        "405":
          description: Invalid input
  /product/{productid}:
    get:
      tags:
      - product
      summary: Find product by ID
      description: Returns a single product
      operationId: getProductByID
      parameters:
      - name: productid
        in: path
        description: Search for a product by its ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  productid:
                    type: integer
                    format: int64
                    example: 10
                  categoryid:
                    type: string
                    example: eye_makeup
                  warehouseid:
                    type: integer
                    format: int64
                    example: 777
                  name:
                    type: string
                    example: Elf Mascara
                  description:
                    type: string
                    example: null
                  price:
                    type: number
                    format: double
                    example: 29.99
                  quantity:
                    type: integer
                    format: int32
                    example: 70
                xml:
                  name: product
            application/xml:
              schema:
                type: object
                properties:
                  productid:
                    type: integer
                    format: int64
                    example: 10
                  categoryid:
                    type: string
                    example: eye_makeup
                  warehouseid:
                    type: integer
                    format: int64
                    example: 777
                  name:
                    type: string
                    example: Elf Mascara
                  description:
                    type: string
                    example: null
                  price:
                    type: number
                    format: double
                    example: 29.99
                  quantity:
                    type: integer
                    format: int32
                    example: 70
                xml:
                  name: product
        "400":
          description: Invalid ID supplied
        "404":
          description: Product not found
    patch:
      tags:
      - product
      summary: Updates a Product in the inventory with form data
      description: ""
      operationId: updateProductWithForm
      parameters:
      - name: productid
        in: path
        description: ID of a Product that needs to be updated
        required: true
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: Name of a Product that needs to be updated
        schema:
          type: string
      - name: status
        in: query
        description: Status of a Product that needs to be updated
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad Request
    delete:
      tags:
      - product
      summary: Deletes a product
      description: Remove a product from the inventory by its ID
      operationId: deleteProduct
      parameters:
      - name: api_key
        in: header
        description: ""
        required: false
        schema:
          type: string
      - name: productid
        in: path
        description: Product id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid a Product value
  /category:
    put:
      tags:
      - category
      summary: Update category information from the system.
      description: Update category information from the system.
      operationId: updateCategory
      requestBody:
        description: Update category information from the system
        content:
          application/json:
            schema:
              type: object
              properties:
                categoryid:
                  type: string
                  example: eye_makeup
                name:
                  type: string
                  example: Eye Makeup
                description:
                  type: string
                  example: null
              xml:
                name: category
          application/xml:
            schema:
              type: object
              properties:
                categoryid:
                  type: string
                  example: eye_makeup
                name:
                  type: string
                  example: Eye Makeup
                description:
                  type: string
                  example: null
              xml:
                name: category
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                categoryid:
                  type: string
                  example: eye_makeup
                name:
                  type: string
                  example: Eye Makeup
                description:
                  type: string
                  example: null
              xml:
                name: category
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  categoryid:
                    type: string
                    example: eye_makeup
                  name:
                    type: string
                    example: Eye Makeup
                  description:
                    type: string
                    example: null
                xml:
                  name: category
            application/xml:
              schema:
                type: object
                properties:
                  categoryid:
                    type: string
                    example: eye_makeup
                  name:
                    type: string
                    example: Eye Makeup
                  description:
                    type: string
                    example: null
                xml:
                  name: category
        "400":
          description: Invalid ID supplied
        "404":
          description: Product not found
        "405":
          description: Validation exception
    post:
      tags:
      - category
      summary: Add a new category to the system
      description: Add a new category to the system
      operationId: addCategory
      requestBody:
        description: Add a new category to the system
        content:
          application/json:
            schema:
              type: object
              properties:
                categoryid:
                  type: string
                  example: eye_makeup
                name:
                  type: string
                  example: Eye Makeup
                description:
                  type: string
                  example: null
              xml:
                name: category
          application/xml:
            schema:
              type: object
              properties:
                categoryid:
                  type: string
                  example: eye_makeup
                name:
                  type: string
                  example: Eye Makeup
                description:
                  type: string
                  example: null
              xml:
                name: category
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                categoryid:
                  type: string
                  example: eye_makeup
                name:
                  type: string
                  example: Eye Makeup
                description:
                  type: string
                  example: null
              xml:
                name: category
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  categoryid:
                    type: string
                    example: eye_makeup
                  name:
                    type: string
                    example: Eye Makeup
                  description:
                    type: string
                    example: null
                xml:
                  name: category
            application/xml:
              schema:
                type: object
                properties:
                  categoryid:
                    type: string
                    example: eye_makeup
                  name:
                    type: string
                    example: Eye Makeup
                  description:
                    type: string
                    example: null
                xml:
                  name: category
        "405":
          description: Invalid input
  /category/{categoryid}:
    get:
      tags:
      - category
      summary: Search for a category by its ID
      description: Search for a category by its ID
      operationId: getCategoryById
      parameters:
      - name: categoryid
        in: path
        description: Search for a category by its ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  categoryid:
                    type: string
                    example: eye_makeup
                  name:
                    type: string
                    example: Eye Makeup
                  description:
                    type: string
                    example: null
                xml:
                  name: category
            application/xml:
              schema:
                type: object
                properties:
                  categoryid:
                    type: string
                    example: eye_makeup
                  name:
                    type: string
                    example: Eye Makeup
                  description:
                    type: string
                    example: null
                xml:
                  name: category
        "400":
          description: Invalid ID supplied
        "404":
          description: Product not found
    patch:
      tags:
      - category
      summary: Update one or more attributes of a particular category
      description: ""
      operationId: updateCategoriesWithForm
      parameters:
      - name: categoryid
        in: path
        description: ID of a category that needs to be updated
        required: true
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: Name of a category that needs to be updated
        schema:
          type: string
      - name: status
        in: query
        description: Status of a category that needs to be updated
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad Request
        "422":
          description: Unprocessable Entity
    delete:
      tags:
      - category
      summary: Deletes a category
      description: Remove a shipment from the system by its ID
      operationId: deleteCategory
      parameters:
      - name: api_key
        in: header
        description: ""
        required: false
        schema:
          type: string
      - name: categoryid
        in: path
        description: Category id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid category value
  /warehouse:
    put:
      tags:
      - warehouse
      summary: Update wearhouse information from the system
      description: Update wearhouse information from the system
      operationId: updateWarehouse
      requestBody:
        description: Update wearhouse information from the system
        content:
          application/json:
            schema:
              type: object
              properties:
                warehouseid:
                  type: integer
                  format: int64
                  example: 333
                name:
                  type: string
                  example: Pink Palace
                location:
                  type: string
                  example: Paris
                capacity:
                  type: integer
                  format: int32
                  example: 220
              xml:
                name: warehouse
          application/xml:
            schema:
              type: object
              properties:
                warehouseid:
                  type: integer
                  format: int64
                  example: 333
                name:
                  type: string
                  example: Pink Palace
                location:
                  type: string
                  example: Paris
                capacity:
                  type: integer
                  format: int32
                  example: 220
              xml:
                name: warehouse
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                warehouseid:
                  type: integer
                  format: int64
                  example: 333
                name:
                  type: string
                  example: Pink Palace
                location:
                  type: string
                  example: Paris
                capacity:
                  type: integer
                  format: int32
                  example: 220
              xml:
                name: warehouse
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  warehouseid:
                    type: integer
                    format: int64
                    example: 333
                  name:
                    type: string
                    example: Pink Palace
                  location:
                    type: string
                    example: Paris
                  capacity:
                    type: integer
                    format: int32
                    example: 220
                xml:
                  name: warehouse
            application/xml:
              schema:
                type: object
                properties:
                  warehouseid:
                    type: integer
                    format: int64
                    example: 333
                  name:
                    type: string
                    example: Pink Palace
                  location:
                    type: string
                    example: Paris
                  capacity:
                    type: integer
                    format: int32
                    example: 220
                xml:
                  name: warehouse
        "400":
          description: Invalid ID supplied
        "404":
          description: Product not found
        "405":
          description: Validation exception
    post:
      tags:
      - warehouse
      summary: Add a new warehouse to the system
      description: Add a new warehouse to the system
      operationId: addWarehouse
      requestBody:
        description: Add a new warehouse to the system
        content:
          application/json:
            schema:
              type: object
              properties:
                warehouseid:
                  type: integer
                  format: int64
                  example: 333
                name:
                  type: string
                  example: Pink Palace
                location:
                  type: string
                  example: Paris
                capacity:
                  type: integer
                  format: int32
                  example: 220
              xml:
                name: warehouse
          application/xml:
            schema:
              type: object
              properties:
                warehouseid:
                  type: integer
                  format: int64
                  example: 333
                name:
                  type: string
                  example: Pink Palace
                location:
                  type: string
                  example: Paris
                capacity:
                  type: integer
                  format: int32
                  example: 220
              xml:
                name: warehouse
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                warehouseid:
                  type: integer
                  format: int64
                  example: 333
                name:
                  type: string
                  example: Pink Palace
                location:
                  type: string
                  example: Paris
                capacity:
                  type: integer
                  format: int32
                  example: 220
              xml:
                name: warehouse
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  warehouseid:
                    type: integer
                    format: int64
                    example: 333
                  name:
                    type: string
                    example: Pink Palace
                  location:
                    type: string
                    example: Paris
                  capacity:
                    type: integer
                    format: int32
                    example: 220
                xml:
                  name: warehouse
            application/xml:
              schema:
                type: object
                properties:
                  warehouseid:
                    type: integer
                    format: int64
                    example: 333
                  name:
                    type: string
                    example: Pink Palace
                  location:
                    type: string
                    example: Paris
                  capacity:
                    type: integer
                    format: int32
                    example: 220
                xml:
                  name: warehouse
        "405":
          description: Invalid input
  /warehouse/{warehouseid}:
    get:
      tags:
      - warehouse
      summary: Search for a warehouse by its ID
      description: Search for a warehouse by its ID
      operationId: getWarehouseByid
      parameters:
      - name: warehouseid
        in: path
        description: Search for a warehouse by its ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  warehouseid:
                    type: integer
                    format: int64
                    example: 333
                  name:
                    type: string
                    example: Pink Palace
                  location:
                    type: string
                    example: Paris
                  capacity:
                    type: integer
                    format: int32
                    example: 220
                xml:
                  name: warehouse
            application/xml:
              schema:
                type: object
                properties:
                  warehouseid:
                    type: integer
                    format: int64
                    example: 333
                  name:
                    type: string
                    example: Pink Palace
                  location:
                    type: string
                    example: Paris
                  capacity:
                    type: integer
                    format: int32
                    example: 220
                xml:
                  name: warehouse
        "400":
          description: Invalid ID supplied
        "404":
          description: Product not found
    patch:
      tags:
      - warehouse
      summary: Update one or more attributes of a particular warehouse
      description: ""
      operationId: updateWarehouseWithForm
      parameters:
      - name: warehouseid
        in: path
        description: Update one or more attributes of a particular warehouse using ID
        required: true
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: Name of a warehouse that needs to be updated
        schema:
          type: string
      - name: status
        in: query
        description: Status of a warehouse that needs to be updated
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad Request
        "422":
          description: Unprocessable Entity
    delete:
      tags:
      - warehouse
      summary: Deletes a warehouse
      description: Remove a warehouse from the inventory by its ID
      operationId: deleteWarehouse
      parameters:
      - name: api_key
        in: header
        description: ""
        required: false
        schema:
          type: string
      - name: warehouseid
        in: path
        description: warehouse id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid a Product value
  /shipment:
    put:
      tags:
      - shipment
      summary: Update shipment information from the system
      description: Update shipment information from the system
      operationId: updateShipment
      requestBody:
        description: Update shipment information from the system
        content:
          application/json:
            schema:
              type: object
              properties:
                shipmentid:
                  type: integer
                  format: int64
                  example: 90
                warehouseid:
                  type: integer
                  format: int64
                  example: 777
                productid:
                  type: integer
                  format: int64
                  example: 10
                status:
                  type: string
                  example: shipped
                trackingNumber:
                  type: string
                  example: 23492
              xml:
                name: shipment
          application/xml:
            schema:
              type: object
              properties:
                shipmentid:
                  type: integer
                  format: int64
                  example: 90
                warehouseid:
                  type: integer
                  format: int64
                  example: 777
                productid:
                  type: integer
                  format: int64
                  example: 10
                status:
                  type: string
                  example: shipped
                trackingNumber:
                  type: string
                  example: 23492
              xml:
                name: shipment
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                shipmentid:
                  type: integer
                  format: int64
                  example: 90
                warehouseid:
                  type: integer
                  format: int64
                  example: 777
                productid:
                  type: integer
                  format: int64
                  example: 10
                status:
                  type: string
                  example: shipped
                trackingNumber:
                  type: string
                  example: 23492
              xml:
                name: shipment
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  shipmentid:
                    type: integer
                    format: int64
                    example: 90
                  warehouseid:
                    type: integer
                    format: int64
                    example: 777
                  productid:
                    type: integer
                    format: int64
                    example: 10
                  status:
                    type: string
                    example: shipped
                  trackingNumber:
                    type: string
                    example: 23492
                xml:
                  name: shipment
            application/xml:
              schema:
                type: object
                properties:
                  shipmentid:
                    type: integer
                    format: int64
                    example: 90
                  warehouseid:
                    type: integer
                    format: int64
                    example: 777
                  productid:
                    type: integer
                    format: int64
                    example: 10
                  status:
                    type: string
                    example: shipped
                  trackingNumber:
                    type: string
                    example: 23492
                xml:
                  name: shipment
        "400":
          description: Invalid ID supplied
        "404":
          description: Product not found
        "405":
          description: Validation exception
    post:
      tags:
      - shipment
      summary: Add a new shipment to the system
      description: Add a new shipment to the system
      operationId: addShipment
      requestBody:
        description: Add a new shipment to the system
        content:
          application/json:
            schema:
              type: object
              properties:
                shipmentid:
                  type: integer
                  format: int64
                  example: 90
                warehouseid:
                  type: integer
                  format: int64
                  example: 777
                productid:
                  type: integer
                  format: int64
                  example: 10
                status:
                  type: string
                  example: shipped
                trackingNumber:
                  type: string
                  example: 23492
              xml:
                name: shipment
          application/xml:
            schema:
              type: object
              properties:
                shipmentid:
                  type: integer
                  format: int64
                  example: 90
                warehouseid:
                  type: integer
                  format: int64
                  example: 777
                productid:
                  type: integer
                  format: int64
                  example: 10
                status:
                  type: string
                  example: shipped
                trackingNumber:
                  type: string
                  example: 23492
              xml:
                name: shipment
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                shipmentid:
                  type: integer
                  format: int64
                  example: 90
                warehouseid:
                  type: integer
                  format: int64
                  example: 777
                productid:
                  type: integer
                  format: int64
                  example: 10
                status:
                  type: string
                  example: shipped
                trackingNumber:
                  type: string
                  example: 23492
              xml:
                name: shipment
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  shipmentid:
                    type: integer
                    format: int64
                    example: 90
                  warehouseid:
                    type: integer
                    format: int64
                    example: 777
                  productid:
                    type: integer
                    format: int64
                    example: 10
                  status:
                    type: string
                    example: shipped
                  trackingNumber:
                    type: string
                    example: 23492
                xml:
                  name: shipment
            application/xml:
              schema:
                type: object
                properties:
                  shipmentid:
                    type: integer
                    format: int64
                    example: 90
                  warehouseid:
                    type: integer
                    format: int64
                    example: 777
                  productid:
                    type: integer
                    format: int64
                    example: 10
                  status:
                    type: string
                    example: shipped
                  trackingNumber:
                    type: string
                    example: 23492
                xml:
                  name: shipment
        "405":
          description: Invalid input
  /shipment/{shipmentid}:
    get:
      tags:
      - shipment
      summary: Search for a shipment by its ID
      description: Search for a shipment by its ID
      operationId: getShipmentByid
      parameters:
      - name: shipmentid
        in: path
        description: Search for a shipment by its ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  shipmentid:
                    type: integer
                    format: int64
                    example: 90
                  warehouseid:
                    type: integer
                    format: int64
                    example: 777
                  productid:
                    type: integer
                    format: int64
                    example: 10
                  status:
                    type: string
                    example: shipped
                  trackingNumber:
                    type: string
                    example: 23492
                xml:
                  name: shipment
            application/xml:
              schema:
                type: object
                properties:
                  shipmentid:
                    type: integer
                    format: int64
                    example: 90
                  warehouseid:
                    type: integer
                    format: int64
                    example: 777
                  productid:
                    type: integer
                    format: int64
                    example: 10
                  status:
                    type: string
                    example: shipped
                  trackingNumber:
                    type: string
                    example: 23492
                xml:
                  name: shipment
        "400":
          description: Invalid ID supplied
        "404":
          description: Product not found
    patch:
      tags:
      - shipment
      summary: Update one or more attributes of a particular shipment
      description: ""
      operationId: updateShipmentWithForm
      parameters:
      - name: shipmentid
        in: path
        description: Update one or more attributes of a particular shipment using ID
        required: true
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        description: Name of a shipment that needs to be updated
        schema:
          type: string
      - name: status
        in: query
        description: Status of a shipment that needs to be updated
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad Request
        "422":
          description: Unprocessable Entity
    delete:
      tags:
      - shipment
      summary: Deletes a shipment
      description: Remove a shipment from the inventory by its ID
      operationId: deleteShipment
      parameters:
      - name: api_key
        in: header
        description: ""
        required: false
        schema:
          type: string
      - name: shipmentid
        in: path
        description: shipment id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid shipment value
components:
  schemas:
    product:
      type: object
      properties:
        productid:
          type: integer
          format: int64
          example: 10
        categoryid:
          type: string
          example: eye_makeup
        warehouseid:
          type: integer
          format: int64
          example: 777
        name:
          type: string
          example: Elf Mascara
        description:
          type: string
          example: null
        price:
          type: number
          format: double
          example: 29.99
        quantity:
          type: integer
          format: int32
          example: 70
      xml:
        name: product
    category:
      type: object
      properties:
        categoryid:
          type: string
          example: eye_makeup
        name:
          type: string
          example: Eye Makeup
        description:
          type: string
          example: null
      xml:
        name: category
    warehouse:
      type: object
      properties:
        warehouseid:
          type: integer
          format: int64
          example: 333
        name:
          type: string
          example: Pink Palace
        location:
          type: string
          example: Paris
        capacity:
          type: integer
          format: int32
          example: 220
      xml:
        name: warehouse
    shipment:
      type: object
      properties:
        shipmentid:
          type: integer
          format: int64
          example: 90
        warehouseid:
          type: integer
          format: int64
          example: 777
        productid:
          type: integer
          format: int64
          example: 10
        status:
          type: string
          example: shipped
        trackingNumber:
          type: string
          example: 23492
      xml:
        name: shipment
